{"version":3,"sources":["components/SuccessPage.module.css","components/AuthForm.module.css","components/Info.module.css","components/Nav.module.css","components/Form.module.css","components/Schedule.module.css","components/TopNav.module.css","components/DateInfo.module.css","components/Info.js","components/Nav.js","components/Calender.js","components/api/Mail.js","components/Form.js","components/Time.js","components/DateInfo.js","components/Schedule.js","components/SuccessPage.js","components/redux-store/Index.js","components/AuthForm.js","components/TopNav.js","App.js","index.js"],"names":["module","exports","Info","props","name","useSelector","state","auth","className","styles","body","body_header","show","date_show","date","dates","timer","Nav","useState","text","setText","pathname","useLocation","txt","loading","useEffect","body_inner","onClick","back","next","type","onSubmit","onClickFor","disabled","Calender","sendMail","data","fetch","method","headers","Accept","JSON","stringify","then","response","console","log","json","catch","err","Form","emailNotValid","setEmailNotValid","phoneNotValid","setPhoneNotValid","nameNotValid","setNameNotValid","trim","length","phoneNumber","email","includes","setIsActive","header","form","placeholder","value","onChange","e","setName","target","onBlur","required","setPhoneNumber","setEmail","Time","active","setActive","time","map","list","setTimer","setShow","DateInfo","Schedule","wrapper","wrapper__init","wrapper_calender","minDate","Date","SuccessPage","navigate","useNavigate","svg_wrapper","svg","width","height","viewBox","fill","xmlns","d","schedule","buttons","authSlice","createSlice","initialState","token","isLoggedIn","expirationTime","reducers","login","action","payload","expTime","expiresIn","idToken","displayName","logout","persistConfig","key","storage","persistedReducer","persistReducer","reducer","store","configureStore","middleware","thunk","authActions","actions","require","config","AuthForm","isLogin","setIsLogin","password","setPassWord","confirmPassword","setConfirmPassword","setLoading","dispatch","useDispatch","preventDefault","signInHandler","a","returnSecureToken","res","ok","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","sigUpHandler","success","warning","control","htmlFor","id","toggle","prev","TopNav","loggedIn","setTimeout","clearTimeout","to","logo","App","isActive","setDate","setDates","timers","setInterval","month","toLocaleString","dateNum","getDate","year","getFullYear","clearInterval","navigateForwardHAndler","path","element","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.856743fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SuccessPage_body__WUx8K\",\"fadeIn\":\"SuccessPage_fadeIn__2JjdB\",\"svg_wrapper\":\"SuccessPage_svg_wrapper__2y8hL\",\"svg\":\"SuccessPage_svg__2G-97\",\"back\":\"SuccessPage_back__3kwjg\",\"header\":\"SuccessPage_header__3to3t\",\"schedule\":\"SuccessPage_schedule__3ni1k\",\"buttons\":\"SuccessPage_buttons__1k_UA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1VPHD\",\"control\":\"AuthForm_control__2HUoD\",\"actions\":\"AuthForm_actions__1qbam\",\"toggle\":\"AuthForm_toggle__2PgUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date_show\":\"Info_date_show__TWPH5\",\"date\":\"Info_date__2ADOx\",\"fadeDate\":\"Info_fadeDate__NP26S\",\"body\":\"Info_body__3t3lD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Nav_body__3zycG\",\"body_inner\":\"Nav_body_inner__2gpR_\",\"next\":\"Nav_next__2KYUZ\",\"back\":\"Nav_back__2YAFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Form_body__1ZhyU\",\"fadeIn\":\"Form_fadeIn__1hF2H\",\"header\":\"Form_header__1zcTG\",\"form\":\"Form_form__2hemT\",\"fadeError\":\"Form_fadeError__3wwq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Schedule_wrapper__3eulX\",\"fadeIn\":\"Schedule_fadeIn__-0ebD\",\"wrapper__init\":\"Schedule_wrapper__init__1NiaL\",\"wrapper_calender\":\"Schedule_wrapper_calender__1shMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TopNav_header__3HTEc\",\"logo\":\"TopNav_logo__GlNFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"DateInfo_body__2M55L\"};","import React from 'react'\nimport styles from './Info.module.css'\nimport { useSelector } from 'react-redux'\nfunction Info(props) {\n    let name = useSelector(state => state.auth.name)\n    return (\n        <div className={styles.body}>\n            <div className={styles.body_header}>\n                <h2>{name}</h2>\n            </div>\n            <div className={styles.body_header}>\n                <h1>Schdule a demo</h1>\n            </div>\n            <div className={props.show ? styles.date_show : styles.date}>\n                <div>\n                    <h4>Date:</h4>\n                    <h3>{props.dates}</h3>\n                </div>\n                <div>\n                    <h4>Time:</h4>\n                    <h3>{`Scheduled time: ${props.timer}`}</h3>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Info","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router'\nimport styles from './Nav.module.css'\n\nfunction Nav(props) {\n    let [text, setText] = useState('')\n    let { pathname } = useLocation()\n    let txt = props.loading ? 'Submitting...' : 'Submit'\n    useEffect(() => {\n        if (pathname === '/form') {\n            setText(txt)\n        } else {\n            setText('Next')\n        }\n    }, [pathname , txt])\n\n    return (\n        <div className={styles.body}>\n            <div className={styles.body_inner}>\n                <div\n                    onClick={props.onClick}\n                    className={styles.back}\n                >\n                    <h3>&larr; Back</h3>\n                </div>\n                <div className={styles.next}>\n                    <button\n                        type='submit'\n                        onSubmit={props.onSubmit}\n                        onClick={props.onClickFor}\n                        disabled={!props.disabled}>{text}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\nimport './Calender.css'\nimport Info from './Info'\nimport { Outlet } from 'react-router'\nimport Nav from './Nav'\n\nfunction Calender(props) {\n    return (\n        <div className='calender_wrapper'>\n            <div className=\"calender_wrapper__inner__wrapper\">\n                <div className='calender_wrapper__inner__wrapper__info'>\n                    <Info dates={props.dates} show={props.show} timer={props.timer} />\n                </div>\n                <div className='calender_wrapper__inner__wrapper__outlet'>\n                <Outlet />\n                </div>\n            </div>\n            <Nav loading = {props.loading} onSubmit = {props.onSubmit} onClickFor={props.onClickFor} onClick={props.onClick} disabled={props.disabled} />\n        </div>\n    )\n}\n\nexport default Calender","export const sendMail = (data) => {\n    return fetch('https://emailodejs.herokuapp.com/api/sendmail', {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        console.log(\"response\", response); return response.json();\n    }).catch(err => console.log(err))\n}","import React, { useState, useEffect } from 'react'\nimport styles from './Form.module.css'\n\nfunction Form(props) {\n    let [emailNotValid, setEmailNotValid] = useState(false)\n    let [phoneNotValid, setPhoneNotValid] = useState(false)\n    let [nameNotValid, setNameNotValid] = useState(false)\n\n    useEffect(() => {\n        if (props.name.trim().length >= 1 && props.phoneNumber.trim().length >= 1 && props.email.includes('@') && props.email.includes('.com')) {\n            props.setIsActive(true)\n        } else {\n            props.setIsActive(false)\n        }\n    }, [props, props.name, props.phoneNumber, props.email])\n\n    useEffect(() => {\n        if (props.email.trim().length >= 1 && props.email.includes('@') && props.email.includes('.com')) {\n            setEmailNotValid(false)\n        }\n    }, [props.email])\n\n    let textChangeHandler = (e) => {\n        props.setName(e.target.value)\n        // props.onClick(task)\n        setNameNotValid(false)\n    }\n\n    let numberChangeHandler = (e) => {\n        props.setPhoneNumber(e.target.value)\n        setPhoneNotValid(false)\n    }\n\n    let emailChangeHandler = (e) => {\n        props.setEmail(e.target.value)\n        // setEmailNotValid(false)\n    }\n    let formSubmitHandler = () => {\n\n    }\n    let textBlurHandler = () => {\n        if (props.name.trim().length === 0) {\n            setNameNotValid(true)\n        } else {\n            setNameNotValid(false)\n        }\n    }\n    let emailBlurHandler = () => {\n        if (props.email.trim().length === 0 && !props.email.includes('@') && !props.email.includes('.com')) {\n            setEmailNotValid(true)\n        } else {\n            setEmailNotValid(false)\n        }\n    }\n    let phoneBlurHandler = () => {\n        if (props.phoneNumber.trim().length === 0) {\n            setPhoneNotValid(true)\n        } else {\n            setPhoneNotValid(false)\n        }\n    }\n    return (\n        <div className={styles.body}>\n            <div className={styles.header}>\n                <h4>Enter your information</h4>\n            </div>\n            <div className={styles.header}>\n                <h1>Personal Data</h1>\n            </div>\n            <div className={styles.form}>\n                <form onSubmit={formSubmitHandler}>\n                    <div>\n                        <label>Name</label>\n                        <input\n\n                            type='text'\n                            placeholder='Please Enter your name'\n                            value={props.name}\n                            onChange={textChangeHandler}\n                            onBlur={textBlurHandler}\n                            required\n                        />\n                        {nameNotValid && <p>Name must be inputed</p>}\n                    </div>\n                    <div>\n                        <label>Phone Number:</label>\n                        <input\n\n                            type='number'\n                            placeholder='Please Enter your phone number'\n                            value={props.phoneNumber}\n                            onChange={numberChangeHandler}\n                            onBlur={phoneBlurHandler}\n                            required\n                        />\n                        {phoneNotValid && <p>Phone number must be inputed</p>}\n                    </div>\n                    <div>\n                        <label>Email:</label>\n                        <input\n\n                            type='email'\n                            placeholder='Please Enter your email'\n                            value={props.email}\n                            onChange={emailChangeHandler}\n                            onBlur={emailBlurHandler}\n                            required\n                        />\n                        {emailNotValid && <p>Email must be inputed</p>}\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Form","import React, { useState } from 'react'\nimport './Time.css'\n\nfunction Time(props) {\n    let [active, setActive] = useState(null)\n    return (\n        <div className=\"calendar-container__time\">\n            <h3>Time:</h3>\n            <div className=\"calendar-container__time__inner\">\n                {props.time.map((list) => (\n                    <h1\n                        key={list}\n                        onClick={() => {\n                            props.setTimer(list)\n                            setActive(list)\n                            props.setIsActive(true)\n                            props.setShow(true)\n                        }}\n                        className={`${active === list && 'activeButton'}`}\n                    >{list}</h1>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Time","import React from 'react'\nimport styles from './DateInfo.module.css'\n\nfunction DateInfo() {\n  return (\n    <div className={styles.body}>\n        <div>Select a Date and Time</div>\n    </div>\n  )\n}\n\nexport default DateInfo","import React from 'react'\nimport Calendar from 'react-calendar/dist/umd/Calendar'\nimport Time from './Time'\nimport DateInfo from './DateInfo'\nimport styles from './Schedule.module.css'\n\nfunction Schedule(props) {\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.wrapper__init}>\n                <div>\n                    <DateInfo date={props.date} />\n                </div>\n                <div className={styles.wrapper_calender}>\n                    <Calendar minDate={new Date()} onChange={props.onChange} value={props.date} />\n                </div>\n            </div>\n            <div>\n                <Time setShow={props.setShow} setTimer={props.setTimer} setIsActive={props.setIsActive} time={props.time} />\n            </div>\n        </div>\n    )\n}\n\nexport default Schedule","import React from 'react'\nimport { useNavigate } from 'react-router'\nimport styles from './SuccessPage.module.css'\n\nfunction SuccessPage(props) {\n    let text = props.loading ? 'Resending...' : 'Resend Email'\n    let navigate = useNavigate()\n    let homeNavigateHandler = () =>{\n       navigate('/')\n       props.setEmail('')\n       props.setPhoneNumber('')\n       props.setName('')\n    }\n    return (\n        <div className={styles.body}>\n            <div className={styles.svg_wrapper}>\n                <div className={styles.svg}>\n                    <svg width=\"48\" height=\"35\" viewBox=\"0 0 48 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.5037 6.7984L19.3597 33.7552C17.9677 35.1376 15.7637 35.1376 14.3717 33.7552L1.49566 20.968C0.10366 19.5856 0.10366 17.3968 1.49566 16.0144C2.88766 14.632 5.09166 14.632 6.48366 16.0144L16.8657 26.3248L41.5157 1.8448C42.9077 0.462399 45.1117 0.462399 46.5037 1.8448C47.8957 3.2272 47.8957 5.416 46.5037 6.7984Z\" fill=\"#5793E5\" />\n                    </svg>\n                </div>\n            </div>\n            <div className={styles.header}>\n                <h2>We just scheduled a demo for you.</h2>\n            </div>\n            <div className={styles.header}>\n                <p>A calendar invitation for your upcoming demo session has been sent to your email ({props.email})</p>\n            </div>\n            <div className={styles.schedule}>\n                <div>\n                    <p>Date:</p>\n                    <p>{props.dates}.</p>\n                </div>\n                <div>\n                    <p>Time:</p>\n                    <p>{props.timer}</p>\n                </div>\n            </div>\n            <div className={styles.buttons}>\n                <button\n                onClick={homeNavigateHandler}\n                >Get back home</button>\n                <div onClick={props.onClick}>\n                    <p>{text}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SuccessPage","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nconst defaultAuthState = {\n    token: '',\n    isLoggedIn: false,\n    name: '',\n    expirationTime: null\n}\n\n\nlet authSlice = createSlice({\n    name: 'authentication',\n    initialState: defaultAuthState,\n    reducers: {\n        login(state, action) {\n            const payload = action.payload\n            let expTime = payload.expiresIn * 1000\n            state.token = payload.idToken\n            state.isLoggedIn = true\n            state.name = payload.displayName\n            state.expirationTime = expTime\n        },\n        logout(state) {\n            state.token = ''\n            state.isLoggedIn = false\n            state.name = ''\n            state.expirationTime = null\n        }\n    }\n})\n\nconst persistConfig = {\n    key: 'authentication',\n    storage\n}\n\nlet persistedReducer = persistReducer(persistConfig, authSlice.reducer)\n\nconst store = configureStore({\n    reducer: {\n        auth: persistedReducer\n    },\n    middleware: [thunk]\n})\n\nexport const authActions = authSlice.actions\nexport default store\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { authActions } from './redux-store/Index';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './AuthForm.module.css'\nconst dotenv = require('dotenv');\ndotenv.config()\n// let key = process.env.REACT_APP_KEY\n\nfunction AuthForm() {\n    let [isLogin, setIsLogin] = useState(true)\n    let [password, setPassWord] = useState('')\n    let [confirmPassword, setConfirmPassword] = useState('')\n    let [email, setEmail] = useState('')\n    let [loading, setLoading] = useState(false)\n    let [name, setName] = useState('')\n\n    let dispatch = useDispatch()\n\n    let navigate = useNavigate()\n\n    let switchAuthModeHandler = () => {\n        setIsLogin(prev => !prev)\n    }\n    let nameInputHandler = (e) => {\n        setName(e.target.value)\n    }\n    let emailInputHandler = (e) => {\n        setEmail(e.target.value)\n    }\n    let passwordInputHandler = (e) => {\n        setPassWord(e.target.value)\n    }\n    let passwordChangeInputHandler = (e) => {\n        setConfirmPassword(e.target.value)\n    }\n    let submitHandler = (e) => {\n        e.preventDefault()\n        let url1 = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDZhlPg41S1YCUcwLFa9Ia5FRvL1NiTlno`\n        let url2 = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDZhlPg41S1YCUcwLFa9Ia5FRvL1NiTlno`\n        if (!isLogin) {\n            let sigUpHandler = async () => {\n                setLoading(true)\n                let res = await fetch(url1, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        email,\n                        password,\n                        displayName: name,\n                        returnSecureToken: true\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                setLoading(false)\n                if (res.ok) {\n                    toast.success(`Account successfully created, Proceed to login`, {\n                        position: \"top-left\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: 'dark'\n                    });\n                    setName('')\n                    setEmail('')\n                    setPassWord('')\n                    setConfirmPassword('')\n                } else {\n                    let data = await res.json()\n                    toast.error(data.error.message, {\n                        position: \"top-left\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: 'dark'\n                    });\n                }\n            }\n            if (password !== confirmPassword) {\n                toast.warning(`Passwords don't match`, {\n                    position: \"top-left\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: 'dark'\n                });\n            } else {\n                return sigUpHandler();\n            }\n        } else {\n            let signInHandler = async () => {\n                setLoading(true)\n                const res = await fetch(url2,\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            email,\n                            password,\n                            returnSecureToken: true\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    }\n                )\n                setLoading(false)\n                if (res.ok) {\n                    let data = await res.json()\n                    navigate('/')\n                    dispatch(authActions.login(data))\n                } else {\n                    let data = await res.json()\n                    toast.error(data.error.message, {\n                        position: \"top-left\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: 'dark'\n                    });\n                }\n            }\n            signInHandler()\n        }\n    }\n    return (\n        <section className={styles.auth}>\n            <ToastContainer />\n            <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n            <form\n                onSubmit={submitHandler}>\n                {!isLogin && <div className={styles.control}>\n                    <label htmlFor='email'>Name</label>\n                    <input\n                        onChange={nameInputHandler}\n                        value={name}\n                        type='text'\n                        id='name' />\n                </div>}\n                <div className={styles.control}>\n                    <label htmlFor='email'>Email</label>\n                    <input\n                        onChange={emailInputHandler}\n                        value={email}\n                        type='email' id='email'\n                        required />\n                </div>\n                <div className={styles.control}>\n                    <label htmlFor='password'>Password</label>\n                    <input value={password}\n                        onChange={passwordInputHandler}\n                        type='password'\n                        id='password'\n                        required />\n                </div>\n                {!isLogin && <div className={styles.control}>\n                    <label htmlFor='password'>Confirm Password</label>\n                    <input\n                        onChange={passwordChangeInputHandler}\n                        value={confirmPassword}\n                        type='password'\n                        id='confirmPassword'\n                        required />\n                </div>}\n                {!loading && <div className={styles.actions}>\n                    <button>{isLogin ? 'Login' : 'Create Account'}</button>\n                    <button\n                        type='button'\n                        className={styles.toggle}\n                        onClick={switchAuthModeHandler}\n                    >\n                        {isLogin ? 'Create new account' : 'Login with existing account'}\n                    </button>\n                </div>}\n            </form>\n        </section>\n    )\n}\n\nexport default AuthForm","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport styles from './TopNav.module.css'\nimport { authActions } from './redux-store/Index';\n\nfunction TopNav() {\n    let loggedIn = useSelector(state => state.auth.isLoggedIn)\n    let expTime = useSelector(state => state.auth.expirationTime)\n    let navigate = useNavigate()\n    let dispatch = useDispatch()\n    let logOutHandler = () => {\n        dispatch(authActions.logout())\n        navigate('/auth')\n    }\n    useEffect(() => {\n        let timer = setTimeout(() => {\n            dispatch(authActions.logout())\n        }, expTime)\n        return () => {\n            clearTimeout(timer)\n        }\n    })\n    return (\n        <header className={styles.header}>\n            <Link to='/'>\n                <div className={styles.logo}>Schedule</div>\n            </Link>\n            <nav>\n                <ul>\n                    {!loggedIn && <li>\n                        <Link to='/auth'>Login</Link>\n                    </li>}\n                    {loggedIn && <li>\n                        <button onClick={logOutHandler}>Logout</button>\n                    </li>}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default TopNav","import { useState, useEffect } from 'react'\nimport Calender from './components/Calender'\nimport './App.css'\nimport { sendMail } from './components/api/Mail'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Route, Routes, useLocation, Navigate } from 'react-router'\nimport Form from './components/Form'\nimport Schedule from './components/Schedule'\nimport SuccessPage from './components/SuccessPage'\nimport AuthForm from './components/AuthForm'\nimport TopNav from './components/TopNav'\n\n\nfunction App() {\n  let [isActive, setIsActive] = useState(false)\n  let [date, setDate] = useState(new Date())\n  let [timer, setTimer] = useState('00:00')\n  let [dates, setDates] = useState('')\n  let [show, setShow] = useState(false)\n  let [email, setEmail] = useState('')\n  let [loading, setLoading] = useState(false)\n  let [name, setName] = useState('')\n  let [phoneNumber, setPhoneNumber] = useState('')\n  let { pathname } = useLocation()\n  let time = [\"00:00\", \"00:30\", \"01:00\", \"01:30\", \"02:00\", \"02:30\", \"03:00\", \"03:30\", \"04:00\", \"04:30\", \"05:00\", \"05:30\", \"06:00\", \"06:30\", \"07:00\", \"07:30\", \"08:00\", \"08:30\", \"09:00\", \"09:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\", \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\", \"21:30\", \"22:00\", \"22:30\", \"23:00\", \"23:30\"]\n  useEffect(() => {\n    const timers = setInterval(() => {\n      let month = date.toLocaleString('en-US', { month: 'long' })\n      let dateNum = date.getDate()\n      let year = date.getFullYear()\n      setDates(`${dateNum} ${month}, ${year}`)\n    }, 1000);\n\n    return () => {\n      clearInterval(timers);\n    };\n  }, [date]);\n  let loggedIn = useSelector(state => state.auth.isLoggedIn)\n  let navigate = useNavigate()\n  let navigateBackHAndler = () => {\n    if (pathname === '/final') {\n      navigate('/form')\n    } else {\n      navigate('/')\n    }\n  }\n\n  let resendMessageHandler = () => {\n    setLoading(true)\n    sendMail({ name, email, dates, timer }).then(data => {\n      if (data.err) {\n        console.log(data.err)\n      } else {\n        console.log(data)\n        setLoading(false)\n      }\n    })\n  }\n\n  let navigateForwardHAndler = () => {\n    if (pathname === '/form') {\n      setLoading(true)\n      sendMail({ name, email, dates, timer }).then(data => {\n        if (data.err) {\n          console.log(data.err)\n        } else {\n          console.log(data)\n          setLoading(false)\n          navigate('/final')\n        }\n      })\n    } else {\n      navigate('/form')\n    }\n  }\n  return (\n    <div className='main__wrapper1'>\n      <TopNav />\n      <div className='calendar-container1'>\n        <Routes>\n          <Route path='/' element={(loggedIn && <Calender loading={loading} onClickFor={navigateForwardHAndler} onClick={navigateBackHAndler} disabled={isActive} show={show} dates={dates} timer={timer} />) || (!loggedIn && <Navigate to='/auth' />)}>\n            <Route path='/' element={<Schedule show={show} setShow={setShow} isActive={isActive} setIsActive={setIsActive} timer={timer} setTimer={setTimer} time={time} date={date} onChange={setDate} />} />\n            <Route path='form' element={(loggedIn && <Form name={name} setName={setName} phoneNumber={phoneNumber} setPhoneNumber={setPhoneNumber} email={email} setEmail={setEmail} onClick={navigateForwardHAndler} setIsActive={setIsActive} />) || (!loggedIn && <Navigate to='/auth' />)} />\n          </Route>\n          {!loggedIn && <Route path='auth' element={<AuthForm />} />}\n          {loggedIn && <Route path='/final' element={<SuccessPage loading={loading} onClick={resendMessageHandler} setName={setName} setPhoneNumber={setPhoneNumber} setEmail={setEmail} email={email} dates={dates} timer={timer} />} />}\n          <Route path='*' element={<Navigate to='/' />} />\n        </Routes>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\nimport store from './components/redux-store/Index';\nimport persistStore from 'redux-persist/es/persistStore';\n\nlet persistor = persistStore(store)\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <PersistGate loading = {null} persistor = {persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </BrowserRouter>\n);\n"],"sourceRoot":""}